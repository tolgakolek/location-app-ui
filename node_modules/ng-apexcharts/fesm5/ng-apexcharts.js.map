{"version":3,"file":"ng-apexcharts.js","sources":["ng://ng-apexcharts/lib/chart/chart.component.ts","ng://ng-apexcharts/lib/ng-apexcharts.module.ts"],"sourcesContent":["import { Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport {\n  ApexAnnotations,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexDataLabels,\n  ApexFill,\n  ApexGrid,\n  ApexLegend,\n  ApexNonAxisChartSeries,\n  ApexMarkers,\n  ApexNoData,\n  ApexPlotOptions,\n  ApexResponsive,\n  ApexStates,\n  ApexStroke, ApexTheme, ApexTitleSubtitle,\n  ApexTooltip,\n  ApexXAxis,\n  ApexYAxis\n} from '../model/apex-types';\nimport { asapScheduler } from 'rxjs';\n\ndeclare var ApexCharts: any;\n\n@Component({\n  selector: 'apx-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit, OnChanges {\n  @Input() chart: ApexChart;\n  @Input() annotations: ApexAnnotations;\n  @Input() colors: any[];\n  @Input() dataLabels: ApexDataLabels;\n  @Input() series: ApexAxisChartSeries | ApexNonAxisChartSeries;\n  @Input() stroke: ApexStroke;\n  @Input() labels: string[];\n  @Input() legend: ApexLegend;\n  @Input() markers: ApexMarkers;\n  @Input() noData: ApexNoData;\n  @Input() fill: ApexFill;\n  @Input() tooltip: ApexTooltip;\n  @Input() plotOptions: ApexPlotOptions;\n  @Input() responsive: ApexResponsive[];\n  @Input() xaxis: ApexXAxis;\n  @Input() yaxis: ApexYAxis | ApexYAxis[];\n  @Input() grid: ApexGrid;\n  @Input() states: ApexStates;\n  @Input() title: ApexTitleSubtitle;\n  @Input() subtitle: ApexTitleSubtitle;\n  @Input() theme: ApexTheme;\n\n  @Input() autoUpdateSeries = true;\n\n  @ViewChild('chart') private chartElement: ElementRef;\n  private chartObj: any;\n\n  ngOnInit() {\n    asapScheduler.schedule(() => {\n      this.createElement();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    asapScheduler.schedule(() => {\n      if (this.autoUpdateSeries && Object.keys(changes).filter(c => c !== 'series').length === 0) {\n        this.updateSeries(this.series, true);\n        return;\n      }\n\n      this.createElement();\n    });\n  }\n\n  private createElement() {\n    const options: any = {};\n\n    if (this.annotations) { options.annotations = this.annotations; }\n    if (this.chart) { options.chart = this.chart; }\n    if (this.colors) { options.colors = this.colors; }\n    if (this.dataLabels) { options.dataLabels = this.dataLabels; }\n    if (this.series) { options.series = this.series; }\n    if (this.stroke) { options.stroke = this.stroke; }\n    if (this.labels) { options.labels = this.labels; }\n    if (this.legend) { options.legend = this.legend; }\n    if (this.fill) { options.fill = this.fill; }\n    if (this.tooltip) { options.tooltip = this.tooltip; }\n    if (this.plotOptions) { options.plotOptions = this.plotOptions; }\n    if (this.responsive) { options.responsive = this.responsive; }\n    if (this.markers) { options.markers = this.markers; }\n    if (this.noData) { options.noData = this.noData; }\n    if (this.xaxis) { options.xaxis = this.xaxis; }\n    if (this.yaxis) { options.yaxis = this.yaxis; }\n    if (this.grid) { options.grid = this.grid; }\n    if (this.states) { options.states = this.states; }\n    if (this.title) { options.title = this.title; }\n    if (this.subtitle) { options.subtitle = this.subtitle; }\n    if (this.theme) { options.theme = this.theme; }\n\n    if (this.chartObj) {\n      this.chartObj.destroy();\n    }\n\n    this.chartObj = new ApexCharts(\n      this.chartElement.nativeElement,\n      options\n    );\n\n    this.render();\n  }\n\n  public render(): Promise<void> {\n    return this.chartObj.render();\n  }\n\n  public updateOptions(options: any, redrawPaths: boolean, animate: boolean): Promise<void> {\n    return this.chartObj.updateOptions(options, redrawPaths, animate);\n  }\n\n  public updateSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate: boolean) {\n    this.chartObj.updateSeries(newSeries, animate);\n  }\n\n  public appendSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate?: boolean) {\n    this.chartObj.appendSeries(newSeries, animate);\n  }\n\n  public toggleSeries(seriesName: string) {\n    this.chartObj.toggleSeries(seriesName);\n  }\n\n  public resetSeries() {\n    this.chartObj.resetSeries();\n  }\n\n  public toggleDataPointSelection(seriesIndex: number, dataPointIndex?: number) {\n    this.chartObj.toggleDataPointSelection(seriesIndex, dataPointIndex);\n  }\n\n  public destroy() {\n    this.chartObj.destroy()\n  }\n  public addXaxisAnnotation(options: any, pushToMemory?: boolean, context?: any) {\n    this.chartObj.addXaxisAnnotation(options, pushToMemory, context);\n  }\n\n  public addYaxisAnnotation(options: any, pushToMemory?: boolean, context?: any) {\n    this.chartObj.addYaxisAnnotation(options, pushToMemory, context);\n  }\n\n  public addPointAnnotation(options: any, pushToMemory?: boolean, context?: any) {\n    this.chartObj.addPointAnnotation(options, pushToMemory, context);\n  }\n\n  public addText(options: any, pushToMemory?: boolean, context?: any) {\n    this.chartObj.addText(options, pushToMemory, context);\n  }\n\n  public dataURI(): Promise<void> {\n    return this.chartObj.dataURI();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartComponent } from './chart/chart.component';\n\nconst declerations = [\n  ChartComponent\n];\n\n@NgModule({\n  declarations: [\n    ...declerations\n  ],\n  imports: [\n  ],\n  exports: [\n    ...declerations\n  ]\n})\nexport class NgApexchartsModule { }\n"],"names":[],"mappings":";;;;;;;;AAAA;IAwBA;QA4BW,qBAAgB,GAAG,IAAI,CAAC;KA6GlC;;;;IAxGC,iCAAQ;;;IAAR;QAAA,iBAIC;QAHC,aAAa,CAAC,QAAQ;;;QAAC;YACrB,KAAI,CAAC,aAAa,EAAE,CAAC;SACtB,EAAC,CAAC;KACJ;;;;;IAED,oCAAW;;;;IAAX,UAAY,OAAsB;QAAlC,iBASC;QARC,aAAa,CAAC,QAAQ;;;QAAC;YACrB,IAAI,KAAI,CAAC,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM;;;;YAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,QAAQ,GAAA,EAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1F,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACrC,OAAO;aACR;YAED,KAAI,CAAC,aAAa,EAAE,CAAC;SACtB,EAAC,CAAC;KACJ;;;;;IAEO,sCAAa;;;;IAArB;;YACQ,OAAO,GAAQ,EAAE;QAEvB,IAAI,IAAI,CAAC,WAAW,EAAE;YAAE,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SAAE;QACjE,IAAI,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAAE;QAC/C,IAAI,IAAI,CAAC,MAAM,EAAE;YAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;QAClD,IAAI,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SAAE;QAC9D,IAAI,IAAI,CAAC,MAAM,EAAE;YAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;QAClD,IAAI,IAAI,CAAC,MAAM,EAAE;YAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;QAClD,IAAI,IAAI,CAAC,MAAM,EAAE;YAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;QAClD,IAAI,IAAI,CAAC,MAAM,EAAE;YAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;QAClD,IAAI,IAAI,CAAC,IAAI,EAAE;YAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAAE;QAC5C,IAAI,IAAI,CAAC,OAAO,EAAE;YAAE,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAAE;QACrD,IAAI,IAAI,CAAC,WAAW,EAAE;YAAE,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SAAE;QACjE,IAAI,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;SAAE;QAC9D,IAAI,IAAI,CAAC,OAAO,EAAE;YAAE,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAAE;QACrD,IAAI,IAAI,CAAC,MAAM,EAAE;YAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;QAClD,IAAI,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAAE;QAC/C,IAAI,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAAE;QAC/C,IAAI,IAAI,CAAC,IAAI,EAAE;YAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAAE;QAC5C,IAAI,IAAI,CAAC,MAAM,EAAE;YAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;QAClD,IAAI,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAAE;QAC/C,IAAI,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAAE;QACxD,IAAI,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAAE;QAE/C,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SACzB;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAC5B,IAAI,CAAC,YAAY,CAAC,aAAa,EAC/B,OAAO,CACR,CAAC;QAEF,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;;;;IAEM,+BAAM;;;IAAb;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;KAC/B;;;;;;;IAEM,sCAAa;;;;;;IAApB,UAAqB,OAAY,EAAE,WAAoB,EAAE,OAAgB;QACvE,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;KACnE;;;;;;IAEM,qCAAY;;;;;IAAnB,UAAoB,SAAuD,EAAE,OAAgB;QAC3F,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KAChD;;;;;;IAEM,qCAAY;;;;;IAAnB,UAAoB,SAAuD,EAAE,OAAiB;QAC5F,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KAChD;;;;;IAEM,qCAAY;;;;IAAnB,UAAoB,UAAkB;QACpC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;KACxC;;;;IAEM,oCAAW;;;IAAlB;QACE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;KAC7B;;;;;;IAEM,iDAAwB;;;;;IAA/B,UAAgC,WAAmB,EAAE,cAAuB;QAC1E,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;KACrE;;;;IAEM,gCAAO;;;IAAd;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAA;KACxB;;;;;;;IACM,2CAAkB;;;;;;IAAzB,UAA0B,OAAY,EAAE,YAAsB,EAAE,OAAa;QAC3E,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAClE;;;;;;;IAEM,2CAAkB;;;;;;IAAzB,UAA0B,OAAY,EAAE,YAAsB,EAAE,OAAa;QAC3E,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAClE;;;;;;;IAEM,2CAAkB;;;;;;IAAzB,UAA0B,OAAY,EAAE,YAAsB,EAAE,OAAa;QAC3E,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KAClE;;;;;;;IAEM,gCAAO;;;;;;IAAd,UAAe,OAAY,EAAE,YAAsB,EAAE,OAAa;QAChE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KACvD;;;;IAEM,gCAAO;;;IAAd;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;KAChC;;gBAxIF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,gCAAqC;;iBAEtC;;;wBAEE,KAAK;8BACL,KAAK;yBACL,KAAK;6BACL,KAAK;yBACL,KAAK;yBACL,KAAK;yBACL,KAAK;yBACL,KAAK;0BACL,KAAK;yBACL,KAAK;uBACL,KAAK;0BACL,KAAK;8BACL,KAAK;6BACL,KAAK;wBACL,KAAK;wBACL,KAAK;uBACL,KAAK;yBACL,KAAK;wBACL,KAAK;2BACL,KAAK;wBACL,KAAK;mCAEL,KAAK;+BAEL,SAAS,SAAC,OAAO;;IA2GpB,qBAAC;CAzID;;;;;;;ICrBM,YAAY,GAAG;IACnB,cAAc;CACf;AAED;IAAA;KAUmC;;gBAVlC,QAAQ,SAAC;oBACR,YAAY,WACP,YAAY,CAChB;oBACD,OAAO,EAAE,EACR;oBACD,OAAO,WACF,YAAY,CAChB;iBACF;;IACiC,yBAAC;CAVnC;;;;;;;;;;;;;;;;;;;"}