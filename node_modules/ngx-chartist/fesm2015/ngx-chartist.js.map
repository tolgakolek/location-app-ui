{"version":3,"file":"ngx-chartist.js.map","sources":["ng://ngx-chartist/lib/ngx-chartist.service.ts","ng://ngx-chartist/lib/ngx-chartist.component.ts","ng://ngx-chartist/lib/ngx-chartist.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as Chartist from 'chartist';\n\nexport type IChartistEscapeMap = Chartist.IChartistEscapeMap;\nexport type IChartistPieChart = Chartist.IChartistPieChart;\nexport type IChartistBarChart = Chartist.IChartistBarChart;\nexport type IChartistLineChart = Chartist.IChartistLineChart;\nexport type IChartistCandleChart = Chartist.IChartistCandleChart;\nexport type IFixedScaleAxisStatic = Chartist.IFixedScaleAxisStatic;\nexport type IAutoScaleAxisStatic = Chartist.IAutoScaleAxisStatic;\nexport type IStepAxisStatic = Chartist.IStepAxisStatic;\nexport type IChartistSvgStatic = Chartist.ChartistSvgStatic;\nexport type IChartistInterpolationStatic = Chartist.ChartistInterpolationStatic;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxChartistService {\n\n  constructor() { }\n\n  getPrecision(): number {\n    return Chartist.precision;\n  }\n\n  getEscapingMap(): IChartistEscapeMap {\n    return Chartist.escapingMap;\n  }\n\n  getPie(): IChartistPieChart {\n    return Chartist.Pie;\n  }\n\n  getBar(): IChartistBarChart {\n    return Chartist.Bar;\n  }\n\n  getLine(): IChartistLineChart {\n    return Chartist.Line;\n  }\n\n  getCandle(): IChartistCandleChart {\n    return Chartist.Candle;\n  }\n\n  getFixedScaleAxis(): IFixedScaleAxisStatic {\n    return Chartist.FixedScaleAxis;\n  }\n\n  getAutoScaleAxis(): IAutoScaleAxisStatic {\n    return Chartist.AutoScaleAxis;\n  }\n\n  getStepAxis(): IStepAxisStatic {\n    return Chartist.StepAxis;\n  }\n\n  getSvg(): IChartistSvgStatic {\n    return Chartist.Svg;\n  }\n\n  getInterpolation(): IChartistInterpolationStatic {\n    return Chartist.Interpolation;\n  }\n\n  getNoop(): Function {\n    return Chartist.noop;\n  }\n\n  getPlugins(): any {\n    return Chartist.plugins;\n  }\n\n  alphaNumerate(n: number): string {\n    return Chartist.alphaNumerate(n);\n  }\n\n  extend(target: Object, ...sources: Object[]): Object {\n    return Chartist.extend(target, ...sources);\n  }\n\n  replaceAll(str: string, subStr: string, newSubStr: string): string {\n    return Chartist.replaceAll(str, subStr, newSubStr);\n  }\n\n  ensureUnit(value: number, unit: string): string {\n    return Chartist.ensureUnit(value, unit);\n  }\n\n  quantity(input: string | number): Object {\n    return Chartist.quantity(input);\n  }\n\n  query(query: Node | string): Node {\n    return Chartist.query(query);\n  }\n\n  times(length: number): Array<any> {\n    return Chartist.times(length);\n  }\n\n  sum(previous: number, current: number): number {\n    return Chartist.sum(previous, current);\n  }\n\n  mapMultiply(factor: number): (num: number) => number {\n    return Chartist.mapMultiply(factor);\n  }\n\n  mapAdd(addend: number): (num: number) => number {\n    return Chartist.mapAdd(addend);\n  }\n\n  serialMap(arr: Array<any>, cb: Function): Array<any> {\n    return Chartist.serialMap(arr, cb);\n  }\n\n  roundWithPrecision(value: number, digits?: number): number {\n    return Chartist.roundWithPrecision(value, digits);\n  }\n\n  getMultiValue(value: any, dimension?: any): number {\n    return Chartist.getMultiValue(value, dimension);\n  }\n\n  serialize(data: Object | string | number): string {\n    return Chartist.serialize(data);\n  }\n\n  deserialize(data: string): Object | string | number {\n    return Chartist.deserialize(data);\n  }\n\n  createSvg(container: Node, width: string, height: string, className: string): Object {\n    return Chartist.createSvg(container, width, height, className);\n  }\n\n  // These methods are deprecated\n  /*\n  public generateSvg(name: HTMLElement | string, attributes: Object, className?: string, parent?: Object, insertFirst?: boolean): ChartSvg {\n    return new Chartist.Svg(name, attributes, className, parent, insertFirst);\n  }\n  public getSvgEasing(easingName: string) {\n    return Chartist.Svg.Easing[easingName];\n  }\n  public getInterpolationFunction(interpolationType: string): Function {\n    return Chartist.Interpolation[interpolationType];\n  }\n  public getChartistVar(name: string): any {\n    return Chartist['name'];\n  }\n  */\n\n}\n","import {Component, ElementRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges} from '@angular/core';\n\nimport * as Chartist from 'chartist';\nimport {IPieChartOptions} from 'chartist';\n\n// workaround, until https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25839#issuecomment-389833225\n// is merged\nexport interface ILineChartOptions extends Chartist.IChartOptions {\n  axisX?: Chartist.IChartistStepAxis | Chartist.IChartistFixedScaleAxis | Chartist.IChartistAutoScaleAxis;\n  axisY?: Chartist.IChartistStepAxis | Chartist.IChartistFixedScaleAxis | Chartist.IChartistAutoScaleAxis;\n  width?: number | string;\n  height?: number | string;\n  showLine?: boolean;\n  showPoint?: boolean;\n  showArea?: boolean;\n  areaBase?: number;\n  lineSmooth?: Function | boolean;\n  low?: number;\n  high?: number;\n  ticks?: Array<string | number>;\n  chartPadding?: Chartist.IChartPadding;\n  fullWidth?: boolean;\n  classNames?: Chartist.ILineChartClasses;\n  series: {\n    [key: string]: {\n      lineSmooth?: Function | boolean;\n      showLine?: boolean;\n      showPoint?: boolean;\n      showArea?: boolean;\n      areaBase?: number;\n    }\n  };\n}\n\n/**\n * Possible chart types\n * @type {String}\n */\nexport type IChartistType = 'Pie' | 'Bar' | 'Line';\n\nexport type IChartistBase =\n  | Chartist.IChartistPieChart\n  | Chartist.IChartistBarChart\n  | Chartist.IChartistLineChart;\n\nexport interface IChartistLineSmooth {\n  interpolation: 'cardinal' | 'simple' | 'none' | 'step';\n  data: Chartist.IChartistInterpolationOptions | Chartist.IChartistSimpleInterpolationOptions\n    | Chartist.IChartistCardinalInterpolationOptions | Chartist.IChartistStepInterpolationOptions;\n}\n\n// START WORKAROUND (bugs in \"time-series-with-momentjs\" and \"holes-in-data\" and \"filled-holes-in-data\")\n// TODO: do a pull-request in @types/chartists with this fix\n// This is one of the bugs reported: https://github.com/gionkunz/chartist-js/issues/1076\nexport interface IChartistDataPoint {\n  x: number | Date;\n  y: number | Date;\n}\nexport interface IChartistSeriesData {\n  name?: string;\n  value?: number;\n  data?: Array<number> | Array<IChartistDataPoint>;\n  className?: string;\n  meta?: string; // I assume this could probably be a number as well?\n}\nexport interface IChartistData {\n  labels?: Array<string> | Array<number> | Array<Date>;\n  series: Array<IChartistSeriesData> | Array<Array<IChartistData>> | Array<number> |  Array<Array<number> | Array<IChartistDataPoint>>;\n}\n\n// export type IChartistData = Chartist.IChartistData;\n\n// END WORKAROUND\n\n\n// workaround, until https://github.com/DefinitelyTyped/DefinitelyTyped/pull/25839#issuecomment-389833225\n// is merged\nexport type IChartistOptions = ILineChartOptions | Chartist.IBarChartOptions | IPieChartOptions;\n// export type IChartistOptions = Chartist.ILineChartOptions | Chartist.IBarChartOptions | IPieChartOptions;\n\n// The right way would be here \"Chartist.IResponsiveOptionTuple<ChartOptions>;\",\n// but there are problems when creating a variable with such a type\nexport type IChartistResponsiveOptionTuple = Array<string | IChartistOptions>;\nexport type IChartistResponsiveOptions = IChartistResponsiveOptionTuple[];\n\n\nexport interface IChartistEvent {\n  [eventName: string]: (data: any) => void;\n}\n\nexport interface IChartistSettingsType {\n  data: IChartistData;\n  options: IChartistOptions;\n  events?: IChartistEvent;\n  lineSmooth?: IChartistLineSmooth;\n  responsiveOptions?: IChartistResponsiveOptions;\n  type?: IChartistType;\n}\n\n@Component({\n  selector: 'lib-ngx-chartist',\n  styles: [`:host:not(.without-styles) ::ng-deep .ct-label{fill:rgba(0,0,0,.4);color:rgba(0,0,0,.4);font-size:.75rem;line-height:1}:host:not(.without-styles) ::ng-deep .ct-chart-bar .ct-label,:host:not(.without-styles) ::ng-deep .ct-chart-line .ct-label{display:block;display:flex}:host:not(.without-styles) ::ng-deep .ct-chart-donut .ct-label,:host:not(.without-styles) ::ng-deep .ct-chart-pie .ct-label{dominant-baseline:central}:host:not(.without-styles) ::ng-deep .ct-label.ct-horizontal.ct-start{align-items:flex-end;justify-content:flex-start;text-align:left;text-anchor:start}:host:not(.without-styles) ::ng-deep .ct-label.ct-horizontal.ct-end{align-items:flex-start;justify-content:flex-start;text-align:left;text-anchor:start}:host:not(.without-styles) ::ng-deep .ct-label.ct-vertical.ct-start{align-items:flex-end;justify-content:flex-end;text-align:right;text-anchor:end}:host:not(.without-styles) ::ng-deep .ct-label.ct-vertical.ct-end{align-items:flex-end;justify-content:flex-start;text-align:left;text-anchor:start}:host:not(.without-styles) ::ng-deep .ct-chart-bar .ct-label.ct-horizontal.ct-start{align-items:flex-end;justify-content:center;text-align:center;text-anchor:start}:host:not(.without-styles) ::ng-deep .ct-chart-bar .ct-label.ct-horizontal.ct-end{align-items:flex-start;justify-content:center;text-align:center;text-anchor:start}:host:not(.without-styles) ::ng-deep .ct-chart-bar.ct-horizontal-bars .ct-label.ct-horizontal.ct-start{align-items:flex-end;justify-content:flex-start;text-align:left;text-anchor:start}:host:not(.without-styles) ::ng-deep .ct-chart-bar.ct-horizontal-bars .ct-label.ct-horizontal.ct-end{align-items:flex-start;justify-content:flex-start;text-align:left;text-anchor:start}:host:not(.without-styles) ::ng-deep .ct-chart-bar.ct-horizontal-bars .ct-label.ct-vertical.ct-start{align-items:center;justify-content:flex-end;text-align:right;text-anchor:end}:host:not(.without-styles) ::ng-deep .ct-chart-bar.ct-horizontal-bars .ct-label.ct-vertical.ct-end{align-items:center;justify-content:flex-start;text-align:left;text-anchor:end}:host:not(.without-styles) ::ng-deep .ct-grid{stroke:rgba(0,0,0,.2);stroke-width:1px;stroke-dasharray:2px}:host:not(.without-styles) ::ng-deep .ct-grid-background{fill:none}:host:not(.without-styles) ::ng-deep .ct-point{stroke-width:10px;stroke-linecap:round}:host:not(.without-styles) ::ng-deep .ct-line{fill:none;stroke-width:4px}:host:not(.without-styles) ::ng-deep .ct-area{stroke:none;fill-opacity:.1}:host:not(.without-styles) ::ng-deep .ct-bar{fill:none;stroke-width:10px}:host:not(.without-styles) ::ng-deep .ct-slice-donut{fill:none;stroke-width:60px}:host:not(.without-styles) ::ng-deep .ct-series-a .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-a .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-a .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-a .ct-slice-donut{stroke:#d70206}:host:not(.without-styles) ::ng-deep .ct-series-a .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-a .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-a .ct-slice-pie{fill:#d70206}:host:not(.without-styles) ::ng-deep .ct-series-b .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-b .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-b .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-b .ct-slice-donut{stroke:#f05b4f}:host:not(.without-styles) ::ng-deep .ct-series-b .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-b .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-b .ct-slice-pie{fill:#f05b4f}:host:not(.without-styles) ::ng-deep .ct-series-c .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-c .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-c .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-c .ct-slice-donut{stroke:#f4c63d}:host:not(.without-styles) ::ng-deep .ct-series-c .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-c .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-c .ct-slice-pie{fill:#f4c63d}:host:not(.without-styles) ::ng-deep .ct-series-d .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-d .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-d .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-d .ct-slice-donut{stroke:#d17905}:host:not(.without-styles) ::ng-deep .ct-series-d .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-d .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-d .ct-slice-pie{fill:#d17905}:host:not(.without-styles) ::ng-deep .ct-series-e .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-e .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-e .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-e .ct-slice-donut{stroke:#453d3f}:host:not(.without-styles) ::ng-deep .ct-series-e .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-e .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-e .ct-slice-pie{fill:#453d3f}:host:not(.without-styles) ::ng-deep .ct-series-f .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-f .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-f .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-f .ct-slice-donut{stroke:#59922b}:host:not(.without-styles) ::ng-deep .ct-series-f .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-f .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-f .ct-slice-pie{fill:#59922b}:host:not(.without-styles) ::ng-deep .ct-series-g .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-g .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-g .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-g .ct-slice-donut{stroke:#0544d3}:host:not(.without-styles) ::ng-deep .ct-series-g .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-g .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-g .ct-slice-pie{fill:#0544d3}:host:not(.without-styles) ::ng-deep .ct-series-h .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-h .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-h .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-h .ct-slice-donut{stroke:#6b0392}:host:not(.without-styles) ::ng-deep .ct-series-h .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-h .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-h .ct-slice-pie{fill:#6b0392}:host:not(.without-styles) ::ng-deep .ct-series-i .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-i .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-i .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-i .ct-slice-donut{stroke:#f05b4f}:host:not(.without-styles) ::ng-deep .ct-series-i .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-i .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-i .ct-slice-pie{fill:#f05b4f}:host:not(.without-styles) ::ng-deep .ct-series-j .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-j .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-j .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-j .ct-slice-donut{stroke:#dda458}:host:not(.without-styles) ::ng-deep .ct-series-j .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-j .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-j .ct-slice-pie{fill:#dda458}:host:not(.without-styles) ::ng-deep .ct-series-k .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-k .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-k .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-k .ct-slice-donut{stroke:#eacf7d}:host:not(.without-styles) ::ng-deep .ct-series-k .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-k .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-k .ct-slice-pie{fill:#eacf7d}:host:not(.without-styles) ::ng-deep .ct-series-l .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-l .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-l .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-l .ct-slice-donut{stroke:#86797d}:host:not(.without-styles) ::ng-deep .ct-series-l .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-l .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-l .ct-slice-pie{fill:#86797d}:host:not(.without-styles) ::ng-deep .ct-series-m .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-m .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-m .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-m .ct-slice-donut{stroke:#b2c326}:host:not(.without-styles) ::ng-deep .ct-series-m .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-m .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-m .ct-slice-pie{fill:#b2c326}:host:not(.without-styles) ::ng-deep .ct-series-n .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-n .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-n .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-n .ct-slice-donut{stroke:#6188e2}:host:not(.without-styles) ::ng-deep .ct-series-n .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-n .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-n .ct-slice-pie{fill:#6188e2}:host:not(.without-styles) ::ng-deep .ct-series-o .ct-bar,:host:not(.without-styles) ::ng-deep .ct-series-o .ct-line,:host:not(.without-styles) ::ng-deep .ct-series-o .ct-point,:host:not(.without-styles) ::ng-deep .ct-series-o .ct-slice-donut{stroke:#a748ca}:host:not(.without-styles) ::ng-deep .ct-series-o .ct-area,:host:not(.without-styles) ::ng-deep .ct-series-o .ct-slice-donut-solid,:host:not(.without-styles) ::ng-deep .ct-series-o .ct-slice-pie{fill:#a748ca}:host:not(.without-styles) ::ng-deep .ct-square{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-square:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:100%}:host:not(.without-styles) ::ng-deep .ct-square:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-square>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-minor-second{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-minor-second:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:93.75%}:host:not(.without-styles) ::ng-deep .ct-minor-second:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-minor-second>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-major-second{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-major-second:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:88.88889%}:host:not(.without-styles) ::ng-deep .ct-major-second:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-major-second>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-minor-third{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-minor-third:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:83.33333%}:host:not(.without-styles) ::ng-deep .ct-minor-third:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-minor-third>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-major-third{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-major-third:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:80%}:host:not(.without-styles) ::ng-deep .ct-major-third:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-major-third>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-perfect-fourth{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-perfect-fourth:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:75%}:host:not(.without-styles) ::ng-deep .ct-perfect-fourth:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-perfect-fourth>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-perfect-fifth{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-perfect-fifth:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:66.66667%}:host:not(.without-styles) ::ng-deep .ct-perfect-fifth:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-perfect-fifth>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-minor-sixth{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-minor-sixth:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:62.5%}:host:not(.without-styles) ::ng-deep .ct-minor-sixth:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-minor-sixth>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-golden-section{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-golden-section:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:61.8047%}:host:not(.without-styles) ::ng-deep .ct-golden-section:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-golden-section>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-major-sixth{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-major-sixth:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:60%}:host:not(.without-styles) ::ng-deep .ct-major-sixth:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-major-sixth>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-minor-seventh{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-minor-seventh:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:56.25%}:host:not(.without-styles) ::ng-deep .ct-minor-seventh:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-minor-seventh>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-major-seventh{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-major-seventh:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:53.33333%}:host:not(.without-styles) ::ng-deep .ct-major-seventh:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-major-seventh>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-octave{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-octave:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:50%}:host:not(.without-styles) ::ng-deep .ct-octave:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-octave>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-major-tenth{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-major-tenth:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:40%}:host:not(.without-styles) ::ng-deep .ct-major-tenth:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-major-tenth>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-major-eleventh{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-major-eleventh:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:37.5%}:host:not(.without-styles) ::ng-deep .ct-major-eleventh:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-major-eleventh>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-major-twelfth{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-major-twelfth:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:33.33333%}:host:not(.without-styles) ::ng-deep .ct-major-twelfth:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-major-twelfth>svg{display:block;position:absolute;top:0;left:0}:host:not(.without-styles) ::ng-deep .ct-double-octave{display:block;position:relative;width:100%}:host:not(.without-styles) ::ng-deep .ct-double-octave:before{display:block;float:left;content:\"\";width:0;height:0;padding-bottom:25%}:host:not(.without-styles) ::ng-deep .ct-double-octave:after{content:\"\";display:table;clear:both}:host:not(.without-styles) ::ng-deep .ct-double-octave>svg{display:block;position:absolute;top:0;left:0}`],\n  template: ''\n})\nexport class NgxChartistComponent implements OnInit, OnChanges, OnDestroy {\n\n  @Input()\n  public data: Promise<IChartistData> | IChartistData;\n\n  @Input() public type: Promise<IChartistType> | IChartistType;\n\n  @Input()\n  public options: Promise<IChartistOptions> | IChartistOptions;\n\n  @Input()\n  public lineSmooth: Promise<IChartistLineSmooth> | IChartistLineSmooth;\n\n  @Input()\n  public responsiveOptions: Promise<IChartistResponsiveOptions> | IChartistResponsiveOptions;\n\n  @Input()\n  public events: Promise<IChartistEvent> | IChartistEvent;\n\n  public chart: IChartistBase;\n\n\n  private element: HTMLElement;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  public ngOnInit(): Promise<IChartistBase> {\n    if (!this.type || !this.data) {\n      Promise.reject('Expected at least type and data.');\n    }\n\n    return this.renderChart().then((chart) => {\n      if (this.events !== undefined) {\n        this.bindEvents(chart);\n      }\n\n      return chart;\n    });\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (this.element) {\n      this.update(changes);\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this.chart) {\n      this.chart.detach();\n    }\n  }\n\n  public renderChart(): Promise<IChartistBase> {\n    const promises: any[] = [\n      this.type,\n      this.element,\n      this.data,\n      this.options,\n      this.responsiveOptions\n    ];\n\n    if (this.lineSmooth) {\n      switch (this.lineSmooth['interpolation']) {\n        case 'cardinal': {\n          this.options['lineSmooth'] = Chartist.Interpolation.cardinal(this.lineSmooth['data']);\n          break;\n        }\n        case 'simple': {\n          this.options['lineSmooth'] = Chartist.Interpolation.simple(this.lineSmooth['data']);\n          break;\n        }\n        case 'none': {\n          this.options['lineSmooth'] = Chartist.Interpolation.none(this.lineSmooth['data']);\n          break;\n        }\n        case 'step': {\n          this.options['lineSmooth'] = Chartist.Interpolation.step(this.lineSmooth['data']);\n          break;\n        }\n      }\n    }\n\n\n    return Promise.all(promises).then((values) => {\n      const [type, ...args]: any = values;\n\n      if (!(type in Chartist)) {\n        throw new Error(`${type} is not a valid chart type`);\n      }\n\n      this.chart = (Chartist as any)[type](...args);\n\n      return this.chart;\n    });\n  }\n\n  public update(changes: SimpleChanges): void {\n    if (!this.chart || 'type' in changes) {\n      this.renderChart();\n    } else {\n      if (changes.data) {\n        this.data = changes.data.currentValue;\n      }\n\n      if (changes.options) {\n        this.options = changes.options.currentValue;\n      }\n      (this.chart as any).update(this.data, this.options);\n    }\n  }\n\n  public bindEvents(chart: any): void {\n    for (const event of Object.keys(this.events)) {\n      chart.on(event, this.events[event]);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxChartistComponent } from './ngx-chartist.component';\nimport {NgxChartistService} from './ngx-chartist.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxChartistComponent],\n  exports: [NgxChartistComponent],\n  providers: [\n    NgxChartistService\n  ]\n})\nexport class NgxChartistModule { }\n"],"names":["Chartist.precision","Chartist.escapingMap","Chartist.Pie","Chartist.Bar","Chartist.Line","Chartist.Candle","Chartist.FixedScaleAxis","Chartist.AutoScaleAxis","Chartist.StepAxis","Chartist.Svg","Chartist.Interpolation","Chartist.noop","Chartist.plugins","Chartist.alphaNumerate","Chartist.extend","Chartist.replaceAll","Chartist.ensureUnit","Chartist.quantity","query","Chartist.query","Chartist.times","Chartist.sum","Chartist.mapMultiply","Chartist.mapAdd","Chartist.serialMap","Chartist.roundWithPrecision","Chartist.getMultiValue","Chartist.serialize","Chartist.deserialize","Chartist.createSvg"],"mappings":"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"}
