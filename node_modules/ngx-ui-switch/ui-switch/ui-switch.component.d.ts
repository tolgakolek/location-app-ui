import { ChangeDetectorRef, EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { UiSwitchModuleConfig } from './ui-switch.config';
export declare class UiSwitchComponent implements ControlValueAccessor {
    private cdr;
    private _checked;
    private _disabled;
    private _reverse;
    size: any;
    color: any;
    switchOffColor: any;
    switchColor: any;
    defaultBgColor: any;
    defaultBoColor: any;
    checkedLabel: any;
    uncheckedLabel: any;
    checked: boolean;
    disabled: boolean;
    reverse: boolean;
    /**
     * Emits changed value
     */
    change: EventEmitter<boolean>;
    /**
     * Emits DOM event
     */
    changeEvent: EventEmitter<MouseEvent>;
    /**
     * Emits changed value
     */
    valueChange: EventEmitter<boolean>;
    constructor(config: UiSwitchModuleConfig | undefined, cdr: ChangeDetectorRef);
    getColor(flag?: string): any;
    onToggle(event: MouseEvent): void;
    writeValue(obj: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    private onTouchedCallback;
    private onChangeCallback;
}
